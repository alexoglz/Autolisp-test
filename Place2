(vl-load-com)

;; UnFormat String function by Lee Mac
(defun LM:UnFormat (str mtx / _replace rx)
  (defun _replace (new old str)
    (vlax-put-property rx 'pattern old)
    (vlax-invoke rx 'replace str new)
  )
  (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
    (progn
      (setq str
        (vl-catch-all-apply
          (function
            (lambda ()
              (vlax-put-property rx 'global actrue)
              (vlax-put-property rx 'multiline actrue)
              (vlax-put-property rx 'ignorecase acfalse)
              (foreach pair
                '(
                  ("\032" . "\\\\\\\\")
                  (" " . "\\\\P|\\n|\\t")
                  ("$1" . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
                  ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
                  ("$1$2" . "\\\\(\\\\S)|[\\\\](})|}")
                  ("$1" . "[\\\\]({)|{")
                )
                (setq str (_replace (car pair) (cdr pair) str))
              )
              (if mtx
                (_replace "\\\\" "\032" (_replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
                (_replace "\\" "\032" str)
              )
            )
          )
        )
      )
      (vlax-release-object rx)
      (if (null (vl-catch-all-error-p str))
        str
      )
    )
  )
)

(defun c:locateTables ()
  (vl-load-com)

  (setq tables (vla-get-ModelSpace (vla-get-ActiveDocument (vlax-get-acad-object))))
  (setq itemHeights (vl-make-hash-table))

  ;; Collect item numbers and their corresponding row heights
  (vlax-for ent tables
    (if (eq (vla-get-objectname ent) "AcDbTable")
      (progn
        (setq table ent)
        (setq rowCount (vla-get-Rows table))
        (setq colCount (vla-get-Columns table))

        (setq i 0)
        (while (< i rowCount)
          (setq cellContent (LM:UnFormat (vla-getText table i 0) nil))
          (setq rowHeight (vla-getRowHeight table i))
          
          (if (not (member cellContent (hash-keys itemHeights)))
            (setq itemHeights (hash-set itemHeights cellContent rowHeight))
          )

          (setq i (1+ i))
        )
      )
    )
  )

  ;; Find the smallest item number
  (setq smallestItem nil)
  (foreach item (hash-keys itemHeights)
    (if (or (null smallestItem) (< (atoi item) smallestItem))
      (setq smallestItem (atoi item))
    )
  )

  ;; Assign coordinates based on row heights
  (setq currentCoordinate '(10 10 0))
  (setq coordinates (vl-make-hash-table))

  (setq currentItem smallestItem)
  (while (<= currentItem (hash-get itemHeights (hash-max itemHeights)))
    (setq itemHeight (hash-get itemHeights (itoa currentItem)))
    (setq coordinates (hash-set coordinates (itoa currentItem) currentCoordinate))
    (setq currentCoordinate (list (car currentCoordinate) (- (cadr currentCoordinate) itemHeight) (caddr currentCoordinate)))
    (setq currentItem (1+ currentItem))
  )

  ;; Place tables at their associated coordinates
  (vlax-for ent tables
    (if (eq (vla-get-objectname ent) "AcDbTable")
      (progn
        (setq table ent)
        (setq firstItem (LM:UnFormat (vla-getText table 0 0) nil))
        (setq tableCoordinate (hash-get coordinates firstItem))
        (vla-move table tableCoordinate)
      )
    )
  )

  (princ "\nTables have been located and placed.")
  (princ)
)

(princ "\nType locateTables to run the script.\n")
(princ)
