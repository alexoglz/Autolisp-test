(vl-load-com)

;; UnFormat String function by Lee Mac
(defun LM:UnFormat ( str mtx / _replace rx )

    (defun _replace ( new old str )
        (vlax-put-property rx 'pattern old)
        (vlax-invoke rx 'replace str new)
    )
    (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
        (progn
            (setq str
                (vl-catch-all-apply
                    (function
                        (lambda ( )
                            (vlax-put-property rx 'global     actrue)
                            (vlax-put-property rx 'multiline  actrue)
                            (vlax-put-property rx 'ignorecase acfalse) 
                            (foreach pair
                               '(
                                    ("\032"    . "\\\\\\\\")
                                    (" "       . "\\\\P|\\n|\\t")
                                    ("$1"      . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
                                    ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
                                    ("$1$2"    . "\\\\(\\\\S)|[\\\\](})|}")
                                    ("$1"      . "[\\\\]({)|{")
                                )
                                (setq str (_replace (car pair) (cdr pair) str))
                            )
                            (if mtx
                                (_replace "\\\\" "\032" (_replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
                                (_replace "\\"   "\032" str)
                            )
                        )
                    )
                )
            )
            (vlax-release-object rx)
            (if (null (vl-catch-all-error-p str))
                str
            )
        )
    )
)

(defun c:adjustRowHeight ( / maxHeight tables table rowCount colCount i j row currentHeight cellContent unformattedContent itemNumbers)
  ;; Initialize the maximum height
  (setq maxHeight 0)
  (setq itemNumbers (make-hash-table :test 'equal))

  ;; Get all entities in the drawing
  (setq tables (vla-get-ModelSpace (vla-get-ActiveDocument (vlax-get-acad-object))))
  (print "\nRetrieved all entities in the drawing.")

  ;; First pass: collect all unique item numbers
  (vlax-for ent tables
    (if (eq (vlax-get-property ent 'ObjectName) "AcDbTable")
      (progn
        (setq table ent)
        (setq rowCount (vla-get-Rows table))
        (setq colCount (vla-get-Columns table))
        (print (strcat "Processing table with " (itoa rowCount) " rows and " (itoa colCount) " columns."))

        ;; Iterate over all rows to collect unique item numbers
        (setq i 0)
        (while (< i rowCount)
          ;; Use vla-getText to get the cell content
          (setq cellContent (vla-getText table i 0))
          ;; Unformat the cell content for comparison
          (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
          ;; Add item number to hash table if not already present
          (setq itemNumbers (cons unformattedContent itemNumbers))
          (setq i (1+ i))
        )
      )
    )
  )

  ;; Iterate over each item number and adjust row heights
  (foreach itemNumber itemNumbers
    (setq maxHeight 0)

    ;; First pass: determine the maximum height for this item number
    (vlax-for ent tables
      (if (eq (vlax-get-property ent 'ObjectName) "AcDbTable")
        (progn
          (setq table ent)
          (setq rowCount (vla-get-Rows table))
          (setq colCount (vla-get-Columns table))

          ;; Iterate over all rows to find the maximum height of the row with the specified item number
          (setq i 0)
          (while (< i rowCount)
            ;; Use vla-getText to get the cell content
            (setq cellContent (vla-getText table i 0))
            ;; Unformat the cell content for comparison
            (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
            (if (= unformattedContent itemNumber)
              (progn
                (setq currentHeight (vla-getRowHeight table i))
                (if (> currentHeight maxHeight)
                  (setq maxHeight currentHeight)
                )
              )
            )
            (setq i (1+ i))
          )
        )
      )
    )

    ;; Second pass: adjust the row heights for this item number
    (vlax-for ent tables
      (if (eq (vlax-get-property ent 'ObjectName) "AcDbTable")
        (progn
          (setq table ent)
          (setq rowCount (vla-get-Rows table))
          (setq colCount (vla-get-Columns table))

          ;; Iterate over all rows to adjust the height
          (setq i 0)
          (while (< i rowCount)
            ;; Use vla-getText to get the cell content
            (setq cellContent (vla-getText table i 0))
            ;; Unformat the cell content for comparison
            (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
            (if (= unformattedContent itemNumber)
              (progn
                (vla-setRowHeight table i maxHeight)
                (print (strcat "Adjusting height of row " (itoa i) " in table for item number " itemNumber))
              )
            )
            (setq i (1+ i))
          )
        )
      )
    )
  )

  (princ "\nRow heights adjusted.")
  (princ)
)

(princ "\nType adjustRowHeight to adjust the row heights for all item numbers.\n")
(princ)
