(vl-load-com)

;; UnFormat String function by Lee Mac
(defun LM:UnFormat (str mtx / _replace rx)
  (defun _replace (new old str)
    (vlax-put-property rx 'pattern old)
    (vlax-invoke rx 'replace str new)
  )
  (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
    (progn
      (setq str
            (vl-catch-all-apply
              (function
                (lambda ()
                  (vlax-put-property rx 'global :vlax-true)
                  (vlax-put-property rx 'multiline :vlax-true)
                  (vlax-put-property rx 'ignorecase :vlax-false)
                  (foreach pair
                    '(("\032" . "\\\\\\\\")
                      (" " . "\\\\P|\\n|\\t")
                      ("$1" . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
                      ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
                      ("$1$2" . "\\\\(\\\\S)|[\\\\](})|}")
                      ("$1" . "[\\\\]({)|{"))
                    (setq str (_replace (car pair) (cdr pair) str))
                  )
                  (if mtx
                    (_replace "\\\\" "\032" (_replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
                    (_replace "\\" "\032" str)
                  )
                )
              )
            )
          )
      (vlax-release-object rx)
      (if (null (vl-catch-all-error-p str))
        str
      )
    )
  )
)

(defun c:organizeTables (/ tables itemGroups coord yOffset)
  ;; Initialize variables
  (setq tables (vla-get-ModelSpace (vla-get-ActiveDocument (vlax-get-acad-object))))
  (setq itemGroups '())
  (setq yOffset 20.3848)

  ;; Iterate over all tables to collect item numbers and their corresponding row heights
  (vlax-for ent tables
    (if (eq (vla-get-ObjectName ent) "AcDbTable")
      (progn
        (setq rowCount (vla-get-Rows ent))
        (setq colCount (vla-get-Columns ent))

        ;; Get the item number and row height of the first row in each table
        (setq cellContent (vla-getText ent 0 0))
        (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
        (setq itemNumber (atoi unformattedContent))
        (setq rowHeight (vla-getRowHeight ent 0))

        ;; Group tables by item number
        (if (assoc itemNumber itemGroups)
          (setq itemGroups (subst (cons itemNumber (append (cdr (assoc itemNumber itemGroups)) (list (cons ent rowHeight)))) (assoc itemNumber itemGroups) itemGroups))
          (setq itemGroups (cons (cons itemNumber (list (cons ent rowHeight)))) itemGroups)
        )
      )
    )
  )

  ;; Sort item groups by item number
  (setq sortedItemGroups (vl-sort itemGroups (function (lambda (a b) (< (caar a) (caar b))))))

  ;; Place tables based on grouped item numbers
  (setq coord (list 1.5290 yOffset 0))
  (foreach group sortedItemGroups
    (foreach tableData (cdr group)
      (setq table (caar tableData))
      (setq rowHeight (cdar tableData))
      (vla-put-InsertionPoint table (vlax-3d-point coord))
    )
    (setq yOffset (- yOffset rowHeight))
    (setq coord (list 1.5290 yOffset 0))
  )

  (princ "\nTables organized and placed.")
  (princ)
)

(princ "\nType organizeTables to organize and place the tables.\n")
(princ)
