(vl-load-com) ;; Loads ActiveX functions into AutoLISP

;; UnFormat String function by Lee Mac
(defun LM:UnFormat (str mtx / _replace rx)
  (defun _replace (new old str)
    (vlax-put-property rx 'pattern old)
    (vlax-invoke rx 'replace str new)
  )
  (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
    (progn
      (setq str
        (vl-catch-all-apply(vl-load-com) ;; Loads ActiveX functions into AutoLISP

;; UnFormat String function by Lee Mac
(defun LM:UnFormat (str mtx / _replace rx)
  (defun _replace (new old str)
    (vlax-put-property rx 'pattern old)
    (vlax-invoke rx 'replace str new)
  )
  (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
    (progn
      (setq str
        (vl-catch-all-apply
          (function
            (lambda ()
              (vlax-put-property rx 'global actrue)
              (vlax-put-property rx 'multiline actrue)
              (vlax-put-property rx 'ignorecase acfalse)
              (foreach pair
                '(
                  ("\032" . "\\\\\\\\")
                  (" " . "\\\\P|\\n|\\t")
                  ("$1" . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
                  ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
                  ("$1$2" . "\\\\(\\\\S)|[\\\\](})|}")
                  ("$1" . "[\\\\]({)|{")
                )
                (setq str (_replace (car pair) (cdr pair) str))
              )
              (if mtx
                (_replace "\\\\" "\032" (_replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
                (_replace "\\" "\032" str)
              )
            )
          )
        )
      )
      (vlax-release-object rx)
      (if (null (vl-catch-all-error-p str))
        str
      )
    )
  )
)

(defun C:RemoveExcelFormatting ()
  (setq doc (vla-get-ActiveDocument (vlax-get-Acad-Object))) ;; Get the active document
  (setq modelSpace (vla-get-ModelSpace doc)) ;; Get the ModelSpace
  (vlax-for ent modelSpace
    (if (eq (vla-get-ObjectName ent) "AcDbTable") ;; Check if entity is a table
      (progn
        (setq numRows (vla-get-Rows ent)) ;; Get the number of rows in the table
        (setq numCols (vla-get-Columns ent)) ;; Get the number of columns in the table
        ;; Loop through each cell in the table
        (setq row 0)
        (while (< row numRows)
          (setq col 0)
          (while (< col numCols)
            (vl-catch-all-apply
              '(lambda ()
                 ;; Get the cell content, unformat it, and set it back
                 (setq cellContent (vla-getText ent row col))
                 (setq unformattedContent (LM:UnFormat cellContent nil))
                 (vla-setText ent row col unformattedContent)
              )
            )
            (setq col (1+ col))
          )
          (setq row (1+ row))
        )
      )
    )
  )
  (princ "\nAll tables' Excel formatting removed.")
  (princ)
)

(princ "\nType 'RemoveExcelFormatting' to remove Excel formatting from all tables.\n")
(princ)

