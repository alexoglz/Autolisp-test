(defun c:stripFormT  ( / LM:UnFormat table col row)
(defun LM:UnFormat ( str mtx / _Replace regex ) (vl-load-com)
  ;; © Lee Mac 2010
  
  (defun _Replace ( new old str )
    (vlax-put-property regex 'pattern old) (vlax-invoke regex 'replace str new)
  )
  (setq regex (vlax-get-or-create-object "VBScript.RegExp"))  
  (mapcar
    (function
      (lambda ( x ) (vlax-put-property regex (car x) (cdr x)))
    )
    (list (cons 'global actrue) (cons 'ignorecase acfalse) (cons 'multiline actrue))
  )
  (mapcar
    (function
      (lambda ( x ) (setq str (_Replace (car x) (cdr x) str)))
    )
   '(
      ("Ð"       . "\\\\\\\\")
      (" "       . "\\\\P|\\n|\\t")
      ("$1"      . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
      ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
      ("$1$2"    . "\\\\(\\\\S)|[\\\\](})|}")
      ("$1"      . "[\\\\]({)|{")
    )
  )
  (setq str
    (if mtx
      (_Replace "\\\\" "Ð" (_Replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
      (_Replace "\\"   "Ð" str)
    )
  )
  (vlax-release-object regex)
  str
)
  
 (if
   (setq table (ssget "_:S:E:L" '((0 . "ACAD_TABLE" ))))
   (progn
     (vla-put-regeneratetablesuppressed (setq table (vlax-ename->vla-object (ssname table 0)))  :vlax-true)
     (setq row (1- (vlax-get table 'Rows)))
     (setq col (vlax-get table 'Columns))
     
     (repeat row
     	((lambda (n)
	   	(repeat n
		  (setq n (1- n))
		  	(if (/= (setq f (vlax-invoke table 'GetText row n)) "")
			  (progn
				(setq unformatted (LM:UnFormat f nil))
		  		(vlax-invoke table 'SetText row n unformatted)))
		  			
					   )
		  		)
					  col
					)
	   (setq row (1- row))
       )
     (vla-put-regeneratetablesuppressed table :vlax-false)
     )
   )
  (princ)
  
  )
