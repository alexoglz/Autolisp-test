(vl-load-com)

;; UnFormat String function by Lee Mac
(defun LM:UnFormat (str mtx / _replace rx)
  (defun _replace (new old str)
    (vlax-put-property rx 'pattern old)
    (vlax-invoke rx 'replace str new)
  )
  (if (setq rx (vlax-get-or-create-object "VBScript.RegExp"))
    (progn
      (setq str
            (vl-catch-all-apply
              (function
                (lambda ()
                  (vlax-put-property rx 'global :vlax-true)
                  (vlax-put-property rx 'multiline :vlax-true)
                  (vlax-put-property rx 'ignorecase :vlax-false)
                  (foreach pair
                    '(("\032" . "\\\\\\\\")
                      (" " . "\\\\P|\\n|\\t")
                      ("$1" . "\\\\(\\\\[ACcFfHLlOopQTW])|\\\\[ACcFfHLlOopQTW][^\\\\;]*;|\\\\[ACcFfHLlOopQTW]")
                      ("$1$2/$3" . "([^\\\\])\\\\S([^;]*)[/#\\^]([^;]*);")
                      ("$1$2" . "\\\\(\\\\S)|[\\\\](})|}")
                      ("$1" . "[\\\\]({)|{"))
                    (setq str (_replace (car pair) (cdr pair) str))
                  )
                  (if mtx
                    (_replace "\\\\" "\032" (_replace "\\$1$2$3" "(\\\\[ACcFfHLlOoPpQSTW])|({)|(})" str))
                    (_replace "\\" "\032" str)
                  )
                )
              )
            )
          )
      (vlax-release-object rx)
      (if (null (vl-catch-all-error-p str))
        str
      )
    )
  )
)

;; SetObjectName function by Lee Mac
;; Ensure this function is defined or included in your script
;; Example function for setting object names in AutoCAD
(defun SetObjectName (ent name / obj)
  (if (setq obj (vlax-ename->vla-object ent))
    (vla-put-ObjectName obj name)
  )
)

;; Command function to organize and place tables
(defun c:organizeTables (/ tables table itemNumbers rowCount colCount i cellContent unformattedContent minItemNumber minRowHeight yOffset coord)
  (print "\nStarting to organize and place tables...")

  ;; Initialize variables
  (setq tables (vla-get-ModelSpace (vla-get-ActiveDocument (vlax-get-acad-object))))
  (setq itemNumbers '())
  (setq yOffset 20.3848)

  ;; Iterate over all entities to collect item numbers and their corresponding row heights
  (print "Iterating over tables to collect item numbers and row heights...")
  (vlax-for ent tables
    (if (eq (vla-get-objectname ent) "AcDbTable")  ; Check if entity is a table
      (progn
        (setq table ent)
        (setq rowCount (vla-get-Rows table))
        (setq colCount (vla-get-Columns table))

        ;; Get the item number and row height of the first row in each table
        (setq cellContent (vla-getText table 0 0))
        (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
        (setq startItemNumber (atoi unformattedContent))

        ;; Get the item number of the last row in each table
        (setq cellContent (vla-getText table (1- rowCount) 0))
        (setq unformattedContent (strcase (LM:UnFormat cellContent nil)))
        (setq endItemNumber (atoi unformattedContent))

        ;; Set the table name based on starting and ending item numbers using SetObjectName
        (SetObjectName table (strcat "Table " (itoa startItemNumber) "-" (itoa endItemNumber)))

        ;; Store the item numbers, table entity, and row height
        (setq itemNumbers (cons (list startItemNumber endItemNumber table rowHeight) itemNumbers))
        (print (strcat "Table named: Table " (itoa startItemNumber) "-" (itoa endItemNumber)))
      )
    )
  )

  ;; Sort item numbers by starting item number
  (setq sortedItemNumbers (vl-sort itemNumbers '(lambda (a b) (< (car a) (car b)))))
  (print "Item numbers sorted.")

  ;; Place tables based on sorted item numbers
  (setq coord (list 1.5290 yOffset 0))
  (print "Placing tables based on sorted item numbers...")
  (foreach itemData sortedItemNumbers
    (setq startItemNumber (car itemData))
    (setq endItemNumber (cadr itemData))
    (setq table (caddr itemData))
    (setq rowHeight (cadddr itemData))
    (vla-put-InsertionPoint table (vlax-3d-point coord))
    (print (strcat "Table placed at coordinate " (rtos (car coord) 2 4) ", " (rtos (cadr coord) 2 4) ", " (rtos (caddr coord) 2 4)))
    (print (strcat "Table name: Table " (itoa startItemNumber) "-" (itoa endItemNumber)))
    (print (strcat "Row height of this table: " (rtos rowHeight 2 4)))
    (setq yOffset (- yOffset rowHeight))
    (print (strcat "New Y offset: " (rtos yOffset 2 4)))
    (setq coord (list 1.5290 yOffset 0))
  )

  (princ "\nTables organized and placed.")
  (princ)
)

(princ "\nType organizeTables to organize and place the tables.\n")
(princ)
