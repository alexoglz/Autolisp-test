(vl-load-com)

(defun get-min-item-number (table)
  "Get the minimum item number from the first column of a table"
  (setq rowCount (vla-get-Rows table))
  (setq minItem (strcase (strtrim (vla-getText table 0 0))))
  (setq i 1)
  (while (< i rowCount)
    (setq itemNumber (strcase (strtrim (vla-getText table i 0))))
    (if (< (atoi itemNumber) (atoi minItem))
      (setq minItem itemNumber))
    (setq i (1+ i)))
  minItem)

(defun get-tables-with-min-item (tables)
  "Get all tables that have the minimum item number"
  (setq minItem "999999")
  (foreach table tables
    (setq itemNumber (get-min-item-number table))
    (if (< (atoi itemNumber) (atoi minItem))
      (setq minItem itemNumber)))

  (setq minTables '())
  (foreach table tables
    (if (= (atoi (get-min-item-number table)) (atoi minItem))
      (setq minTables (append minTables (list table)))))
  minTables)

(defun place-tables-at-coordinate (tables coordinate)
  "Place all tables at the specified coordinate"
  (foreach table tables
    (vla-put-InsertionPoint table coordinate)))

(defun C:placeMinItemTables ()
  ;; Coordenada inicial, edita aquí según sea necesario
  (setq target-coordinate (vlax-3D-point '(10.0 10.0 0.0)))

  (setq doc (vla-get-ActiveDocument (vlax-get-acad-object)))
  (setq tables '())
  
  ;; Obtener todas las entidades en el dibujo
  (setq modelSpace (vla-get-ModelSpace doc))
  (vlax-for ent modelSpace
    (if (eq (vlax-get-property ent 'ObjectName) "AcDbTable")
      (setq tables (append tables (list ent)))))
  
  (setq minItemTables (get-tables-with-min-item tables))
  (place-tables-at-coordinate minItemTables target-coordinate)
  (princ "\nTables with the minimum item number have been placed.")
  (princ))

(princ "\nType 'placeMinItemTables' to place tables with the minimum item number at the specified coordinate.\n")
(princ)
